version: '3'

services:
  #Деплой nginx
  nginx:
    build: ./nginx
    volumes:
      - static_volume:/code/staticfiles
      - media_volume:/code/mediafiles
    ports:
      - "8687:80"
    depends_on:
      - backend_project
    restart: "always"
    networks:
      - internal

  #Деплой сервера Django
  backend_project:
    build:
      context: backend_project
      dockerfile: Dockerfile
    command: gunicorn -c gunicorn.conf.py backend_project.wsgi:application
    expose:
      - "8000:8000"
    volumes:
      - static_volume:/code/staticfiles
      - media_volume:/code/mediafiles
    networks:
      - internal
    depends_on:
      - rabbitmq
      - minio
    env_file:
      - .env.minio

  #Деплой RabbitMQ
  rabbitmq:
    image: "rabbitmq:3-management"
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    ports:
      - "5672:5672"  # Для AMQP
      - "15672:15672"  # Для веб-интерфейса управления
    networks:
      - internal
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3


  # Деплой MinIO
  minio:
    image: docker.io/bitnami/minio:2022
    container_name: minio
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - 'minio_data:/data'
    networks:
      - internal
    env_file:
      - .env.minio


networks:
  internal:
    driver: bridge

volumes:
  minio_data:
    driver: local
  static_volume:
  media_volume: